"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[112],{60058:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Will instantiate a new Portal with the given middleware.","params":[{"name":"middleware?","desc":"A list of middleware names to install with Portal.","lua_type":"{string}"}],"returns":[{"desc":"a Portal instance.","lua_type":"Portal"}],"function_type":"static","source":{"line":54,"path":"src/init.lua"}},{"name":"Context","desc":"Will retrieve an `IContext` from a given input string if it exists, or creates a new one otherwise.","params":[{"name":"context","desc":"The name of the context to retrieve or make.","lua_type":"string"}],"returns":[{"desc":"the `IContext` object with the given name.","lua_type":"IContext"}],"function_type":"method","source":{"line":69,"path":"src/init.lua"}},{"name":"Subscription","desc":"Will make an `ISubscription` from given inputs.","params":[{"name":"context","desc":"The name of the context to make a subscription to.","lua_type":"string"},{"name":"action","desc":"The action to make a subcription to.","lua_type":"string"},{"name":"cb?","desc":"The callback to run when the Context/Action is published to.","lua_type":"(particle: IParticle, target: Player?) -> ()"}],"returns":[{"desc":"the `ISubscription` object created.","lua_type":"ISubscription"}],"function_type":"method","source":{"line":82,"path":"src/init.lua"}},{"name":"Subscribe","desc":"Used to retrieve the listener function and subscribe to a context for events when actions are dispatched. Can be made either with an existing ISubscription or from inputs to make a new one.","params":[{"name":"sub","desc":"The subscription to subscribe with","lua_type":"ISubscription"},{"name":"context","desc":"The name of the context to make a subscription to, to subscribe with.","lua_type":"string?"},{"name":"action","desc":"The action to subscribe to.","lua_type":"string?"},{"name":"cb","desc":"The callback to run when the Context/Action is published to.","lua_type":"(particle: IParticle, target: Player?) -> ()"}],"returns":[{"desc":"The unsubscriber function used to disconnect the subscription from the RemoveEvent.","lua_type":"() -> ()"}],"function_type":"method","source":{"line":100,"path":"src/init.lua"}},{"name":"Publish","desc":"Will initate the Publish sequence, transforming the data sent through the middleware pipeline, and eventually dispatching to the Context/Action RemoteEvent.","params":[{"name":"context","desc":"The name of the context to publish to.","lua_type":"string"},{"name":"action","desc":"The action to publish to.","lua_type":"string"},{"name":"data","desc":"The data you are sending through the remote.","lua_type":"{[string]: any}"},{"name":"target?","desc":"the target, or nil from the server, triggering the event.","lua_type":"Player"}],"returns":[],"function_type":"method","source":{"line":118,"path":"src/init.lua"}},{"name":"Warp","desc":"Will `Warp` (apply middleware to) the data you wish to transmit through the context/action.","params":[{"name":"context","desc":"The context to warp data through.","lua_type":"IContext"},{"name":"action","desc":"The action being targeted.","lua_type":"string"},{"name":"data","desc":"The data to warp (transform).","lua_type":"{[string]: any}"}],"returns":[{"desc":"All data sent through the middleware will return an IParticle object.","lua_type":"IParticle"}],"function_type":"method","source":{"line":132,"path":"src/init.lua"}}],"properties":[{"name":"Wormhole","desc":"The Wormhole bound to this Portal.","lua_type":"IWormhole","source":{"line":45,"path":"src/init.lua"}}],"types":[{"name":"IContext","desc":"","fields":[{"name":"Name","lua_type":"string","desc":"The Name of the Context."},{"name":"Remote","lua_type":"RemoteEvent","desc":"The RemoteEvent this Context owns."},{"name":"Actions","lua_type":"{string}","desc":"A list of actions that belong to this Context."},{"name":"Subscriptions","lua_type":"{[() -> ()]: ISubscription}","desc":"A dictionary of unsubscriber function for the keys and their associated Subscriptions as values."}],"source":{"line":23,"path":"src/Types/IContext.lua"}},{"name":"IParticle","desc":"","fields":[{"name":"Context","lua_type":"string","desc":"The Context this Particle was sent to."},{"name":"Action","lua_type":"string","desc":"The Action this Particle was sent to."},{"name":"Timestamp","lua_type":"DateTime","desc":"The Timestamp this Particle was sent at."},{"name":"Payload","lua_type":"{[string]: any}","desc":"The Payload belonging to this Particle."}],"source":{"line":18,"path":"src/Types/IParticle.lua"}},{"name":"ISubscription","desc":"","fields":[{"name":"Context","lua_type":"string","desc":"The name of the context this subscription is for."},{"name":"Action","lua_type":"string","desc":"The name of the action this subscription is listening to."},{"name":"Callback","lua_type":"(particle: IParticle, sender: Player?) -> ()","desc":"The function to call when the subscription is published to."}],"source":{"line":19,"path":"src/Types/ISubscription.lua"}},{"name":"IWormhole","desc":"","fields":[{"name":"_Storage","lua_type":"Folder","desc":"The storage folder for Portal\'s RemoteEvents."},{"name":"_Contexts","lua_type":"{[string]: IContext}","desc":"The Context managed by this Wormhole."},{"name":"Middleware","lua_type":"any","desc":"The Middleware pipeline of this Wormhole."}],"source":{"line":23,"path":"src/Types/IWormhole.lua"}}],"name":"Portal","desc":"Portal is the gateway into the framework, it\'s all you could need to use. The whole framework is exposed and documented such that developers can extend the functionality of Portal through middleware, or even also perhaps to help maintain the project in the future.","source":{"line":34,"path":"src/init.lua"}}')}}]);