"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[234],{50435:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Will instantiate a new Subscription object to link to a Context.","params":[{"name":"context","desc":"The name of the Context this Subscription is (or will be) linked to.","lua_type":"string"},{"name":"action","desc":"The action this Subscription is listening to.","lua_type":"string"},{"name":"callback","desc":"The callback to be ran when the Context receives data.","lua_type":"(particle: IParticle, sender: Player?) -> ()?"}],"returns":[{"desc":"The new Subscription object.","lua_type":"ISubscription"}],"function_type":"static","source":{"line":26,"path":"src/Subscription.lua"}},{"name":"like","desc":"Compare an object to an ISubscription using a non-strict likeness type check.","params":[{"name":"obj","desc":"The object to compare","lua_type":"any"}],"returns":[{"desc":"`true` if ISubscription-like, `false` otherwise.","lua_type":"(boolean, string?)"}],"function_type":"static","source":{"line":48,"path":"src/Subscription.lua"}},{"name":"Subscribe","desc":"Attach a callback to this Subscription to be run when the Context-Action this Subscription is bound to recieves a message.","params":[{"name":"callback","desc":"The callback to run when the Subscription \'hears\' from the Context-Action.","lua_type":"(particle: IParticle, sender: Player) -> ()"}],"returns":[],"function_type":"method","source":{"line":57,"path":"src/Subscription.lua"}}],"properties":[],"types":[],"name":"Subscription","desc":"A Subscription is exclusively a listening object and cannot be used to publish data. These are to be attached to a Context via the Subscribe method.\\nA Subscription will have an associated Context-Action pair as well as a Callback to be ran when the Subscription \'hears\' from the Context-Action.","source":{"line":14,"path":"src/Subscription.lua"}}')}}]);